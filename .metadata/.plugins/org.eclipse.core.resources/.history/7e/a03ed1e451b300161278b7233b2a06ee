import java.util.Scanner;

//advanced

public class Expand {
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		System.out.print("Enter an alphanumeric combination: ");
		
		String comb = scan.nextLine();
		int cLength = comb.length();
		
		char[] combArray = new char [cLength];
		
		for(int i=0; i<cLength;i++)
		{
			combArray[i] = comb.charAt(i);
		}//end for loop
		
		
		char c;
		int d, i;
		//comb.useDelimiter("[^0-9]+");
		//d=comb.nextInt();
		
		if(Character.isDigit(comb.charAt(0)))  //first character is a number
		{
			if(Character.isDigit(comb.charAt(1)))  //second character is a number
			{
				//d = Integer.parseInt(comb.charAt(0));
				//d.append();
			}else //second character is a letter
			{
				//d = comb.charAt(0);
				
				//String numberAsString = comb.charAt(0);
		        // d = Integer.parseInt(numberAsString);
				int num = (int)comb.charAt(0)- '0';
				System.out.print(num);
				c = comb.charAt(1);
				if(comb.charAt(0) == 1) // first character is 1
				{
					System.out.print(c);
				}else //first character greater than 1
				{
					i = 0;
					while(i<num)
					{
						//System.out.print(num);
						System.out.print(c);
						i++;
					}//end while
				}//end if - else
				
				
			}//end if
		}else //first character is a letter
		{
			
		}//end if
		
		
		//todo: take as an input a combination of characters and numbers (e.g. 2a3b5c)
		//expand the String by printing each letter so many times as the number before 
		//the letter indicates
		//e.g. 2a3b5c -> aabbbccccc
		//Hint: first start with inputs where there is always a number and then a character, 
		//then think about how
		//to improve your code such that you can use values greater or equal 10, eg. 10a13b22c
		//Further modification: if a character should only be printed one time you don't need 
		//to write any number infront of that character
		//e.g. a3b12cd5e -> abbbccccccccccccdeeeee  
	scan.close();	
	}
	
}
