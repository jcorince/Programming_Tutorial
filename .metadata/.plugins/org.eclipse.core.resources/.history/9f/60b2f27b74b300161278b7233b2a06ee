import java.util.Scanner;

//advanced

public class Expand {
	
	public static void printChar(char s, int n)
	{
		if(n==1)
		{
			System.out.print(s);
		}else if(n>1)
		{
			for(int i=1; i<=n; i++)
			{
				System.out.print(s);
				//System.out.print(i);
			}//end for loop
		}else
		{
			System.out.println("Your combination contains a non alphanumeric character.");
			System.exit(-1);
		}//end if else
		
		
	}// end print method
	
	
//################################       MAIN METHOD BELOW       ###############################	
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		System.out.print("Enter an alphanumeric combination: ");
		
		String comb = scan.nextLine();
		int cLength = comb.length();
		
		/*char[] combArray = new char [cLength];
		
		for(int i=0; i<cLength;i++)
		{
			combArray[i] = comb.charAt(i);
		}//end for loop
*/		
		
		char c;
		int d, k, temp;
		int j=0;
	
		while(j<cLength)
		//for(int j=0;j<cLength;j++)
		{			
			if(Character.isDigit(comb.charAt(j)))  //first character is a number
			{
				if(Character.isDigit(comb.charAt(j+1)))  //second character is a number
				{
					k=j;
					while(!Character.isLetter(comb.charAt(k))&& k<cLength)
					{
						k++;
					}//end while loop
					
					d = 0;
					temp =k;
					c = comb.charAt(k);
					
					int e = k-j;
					while(e>=0)
					{						
						d += (comb.charAt(j)- '0')* ((int)Math.pow(10, (e-1)));
						e--;
						j++;
						//e = k-j;
					}//end while
					//+(comb.charAt(j+1)- '0');
					j=temp;
					printChar(c, d);					
				}else //second character is a letter
				{
					d = comb.charAt(j)- '0';
					c = comb.charAt(j+1);
					if(comb.charAt(j) == 1) // first character is 1
					{
						d=1;
						printChar(c, d);
						j++;
					}else //first character greater than 1
					{
						printChar(c, d);
						j++;
					}//end if - else					
				}//end if
			}else if(j==0) 
			{
				if(Character.isLetter(comb.charAt(j)))//first character is a letter
				{
					c = comb.charAt(j);
					d =1;
					printChar(c, d);
					j++;
				}else
				{
					System.out.println("The first digit must be either a positive integer or a letter.");
					System.exit(-1);
				}//end if-else	
				
			}//end if-else
		j++;
		}//end while
		//todo: take as an input a combination of characters and numbers (e.g. 2a3b5c)
		//expand the String by printing each letter so many times as the number before 
		//the letter indicates
		//e.g. 2a3b5c -> aabbbccccc
		//Hint: first start with inputs where there is always a number and then a character, 
		//then think about how
		//to improve your code such that you can use values greater or equal 10, eg. 10a13b22c
		//Further modification: if a character should only be printed one time you don't need 
		//to write any number infront of that character
		//e.g. a3b12cd5e -> abbbccccccccccccdeeeee  
	scan.close();	
	}
	
}
